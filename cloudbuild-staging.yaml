steps:
  # Install dependencies and run tests
  - name: "node:20-alpine"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        corepack enable && \
        corepack prepare pnpm@9.15.2 --activate && \
        pnpm install --frozen-lockfile && \
        pnpm run test -- --passWithNoTests --watchAll=false --coverage=false
  # Create the .env file
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "NEXT_PUBLIC_CIVITAS_API_URL=https://staging.api.civitas.rio" > .env.production && \
        echo "NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN=pk.eyJ1IjoiZXNjcml0b3Jpb2RlZGFkb3MiLCJhIjoiY2t3bWdmcHpjMmJ2cTJucWJ4MGQ1Mm1kbiJ9.4hHJX-1pSevYoBbja7Pq4w" >> .env.production && \
        echo "NEXT_PUBLIC_VISION_AI_URL=http://staging.app.dados.rio/vision-ai" >> .env.production
  # Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/civitas:$COMMIT_SHA", "."]
  # Push the container image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/civitas:$COMMIT_SHA"]
  # Kustomize: set the image in the kustomization.yaml file
  - name: "gcr.io/cloud-builders/gke-deploy"
    dir: "k8s/staging"
    entrypoint: "kustomize"
    args:
      - "edit"
      - "set"
      - "image"
      - "gcr.io/project-id/civitas=gcr.io/$PROJECT_ID/civitas:$COMMIT_SHA"
  # Kustomize: apply the kustomization.yaml file
  - name: "gcr.io/cloud-builders/gke-deploy"
    dir: "k8s/staging"
    entrypoint: "kustomize"
    args: ["build", ".", "-o", "staging.yaml"]
  # Deploy the application to the GKE cluster
  - name: "gcr.io/cloud-builders/gke-deploy"
    dir: "k8s/staging"
    args:
      - "run"
      - "--filename=staging.yaml"
      - "--location=us-central1"
      - "--cluster=datario"
      - "--project=datario"

images:
  - "gcr.io/$PROJECT_ID/civitas:$COMMIT_SHA"
